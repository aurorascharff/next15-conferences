{
    "actionProp": {
        "scope": "typescriptreact",
        "prefix": "actionProp",
        "body": [
            "selectAction?: (items: SelectItem[]) => void | Promise<void>;"
        ],
    },
    "importViewTransition": {
        "scope": "typescriptreact",
        "prefix": "importViewTransition",
        "body": [
            "import { unstable_ViewTransition as ViewTransition } from 'react';"
        ]
    },
    "successToast": {
        "scope": "typescriptreact",
        "prefix": "successToast",
        "body": [
            "if (items.length > 0) {",
            "  toast.success(`Applied \\${items.length} tag filter\\${items.length > 1 ? 's' : ''}`);",
            "}"
        ]
    },"createQueryStringValue": {
        "scope": "typescriptreact",
        "prefix": "createQueryStringValue",
        "body": [
            "createQueryString(searchParams, {",
            "  name,",
            "  value: items,",
            "}) as Route,"
        ]
    }, "optimisticSelected": {
        "scope": "typescriptreact",
        "prefix": "optimisticSelected",
        "body": [
            "optimisticSelected, setOptimisticSelected"
        ]
    },"celebrateSpeaker": {
        "scope": "typescriptreact",
        "prefix": "celebrateSpeaker",
        "body": [
            "if (",
            "  items.some(item => {",
            "    return item.value === 'Anisha Malde';",
            "  })",
            ") {",
            "  setIsExploding(true);",
            "}"
        ]
    },"optimisticProgress": {
        "scope": "typescriptreact",
        "prefix": "optimisticProgress",
        "body": [
            "const [optimisticProgress, incrementProgress] = useOptimistic(progress, (prev, increment: number) => {",
            "  const next = prev + increment;",
            "  return next >= 100 ? 99.99 : next;",
            "});"
        ]
    },
    "awaitSomeRandomServerFunction": {
        "scope": "typescriptreact",
        "prefix": "awaitSomeRandomServerFunction",
        "body": [
            "await someRandomServerFunction(items, year as string);"
        ]
    }
}